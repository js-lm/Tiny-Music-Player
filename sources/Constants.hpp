#pragma once

#include <raylib.h>

#include <bitset>
#include <ctime>

#include "WindowIcon.h"

namespace Constants{
    constexpr const char *SupportedMusicExtensions{".wav;.ogg;.mp3;.qoa;.flac;.xm;.mod"};

    constexpr int NumberOfLoopMode{4};

    enum class LoopMode{
        No_Loop,
        Directory_Loop,
        Single_Music_Loop,
        Directory_Loop_Infinite,
    };
    
    constexpr const char *LockFileName{"/.~tinymusicplayer.locked"};
    constexpr std::time_t LockExpirationTime{1};
    constexpr float LockUpdateFrequency{.1f};

    namespace System{
        constexpr int WindowWidth{600};
        constexpr int WindowHeight{160};
        constexpr const char *WindowName{"Tiny Music Player"};
        constexpr float WindowOpacity{.9f};
        constexpr int WindowFPS{144};

        constexpr int AudioBufferSize{4096};

        constexpr const char *AppVersion{"0.1.1"};
    } // namespace System

    namespace ImGui{
        constexpr float ControlPanelHorizontalSpacing{10.0f};
        
        constexpr float ProgressBarIndentation      {25.0f};
        constexpr float ProgressBarHorizontalSpacing{10.0f};
        constexpr float ProgressBarWidth            {450.0f};
        constexpr ImVec4 SubtitleColor{.5f, .5f, .5f, 1.0f};
        
        
        constexpr float MusicControlOuterHorizontalSpacing{60.0f};
        constexpr float MusicControlInnerHorizontalSpacing{30.0f};

    } // namespace ImGui

    namespace WindowIcon{

        constexpr Image image{
            .data = WINDOWICON_DATA,
            .width = WINDOWICON_WIDTH,
            .height = WINDOWICON_HEIGHT,
            .format = WINDOWICON_FORMAT
        };
        
    } // namespace WindowIcon

    namespace Icons{
        constexpr ImVec2 ButtonSize {30.0f, 30.0f};
        constexpr Vector2 IconSize  {26.0f, 24.0f};
        constexpr Vector2 IconOffset{
            static_cast<float>(static_cast<int>((ButtonSize.x - IconSize.x) / 2.0f)),
            static_cast<float>(static_cast<int>((ButtonSize.y - IconSize.y) / 2.0f))
        };

        constexpr Color NormalColor{BLACK};
        constexpr Color HoverColor{MAROON};
        constexpr Color ActiveColor{LIGHTGRAY};

        enum class Id{
            Shuffle_Off     = 0,
            Shuffle_On      = 1,
            Previous_Music  = 2,
            Play            = 3,
            Pause           = 4,
            Next_Music      = 5,
            No_Loop         = 6,
            Directory_Loop  = 7,
            Single_Music_Loop       = 8,
            Directory_Loop_Infinite = 9,
            Close           = 10,
            Minimize        = 11,
        };

        constexpr size_t NumberOfRows{24};
        constexpr size_t NumberOfColumns{312};

        constexpr std::bitset<NumberOfColumns> IconsBitset[NumberOfRows]{
            std::bitset<NumberOfColumns>("000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000100000000000000000000000001000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000001000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000000000000000000000000100000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000001000000000000010000000000000000000000000100000000011000000000000000000000000000000000000000000000000011110000000011110000000000000000000000011000000000000010000000001000000000000000000000000010000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000100000000000001000000000000000000000000010000000100100000000000010000000001100000000000000000000000100001000000100001000000001000000000000100100000000000001000000000100000000000000000000000001000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("111111000100000000000000101111110000000000000000001000000100100000000000101000000010011000000000000000000000100001000000100001000000010100000000000100100000000111111111111100010001000001111111111111000100010000011111111111110001000100000111111111111100010001000000001000000000000010000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000100010000000011100010000001000000000000111000100000100100000000001001000000010000110000000000000000000100001000000100001000000010010000000000100100000001000000100000000100001000010000000000000001000010000100000000000000010000100001000000000000000100001000000000100000000000100000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000010010000000100000100000000100000000001000001000000100100000000010001000000010000001100000000000000000100001000000100001000000010001000000000100100000001000000100000001000001000010000000000000010000010000100000000000000100000100001000000000000001000001000000000010000000001000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000001001000001000001000000000010000000010000010000000100100000000100001000000010000000011000000000000000100001000000100001000000010000100000000100100000001000000010000010000001000010000000000000100000010000100000000000001000000100001000000000000010000001000000000001000000010000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000101000010000010000000000001000000100000100000000100100000001000001000000010000000000110000000000000100001000000100001000000010000010000000100100000001000000010000100000001000010000000000001000000010000100000000001010000000100001000000000000000000001000000000000100000100000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000010100100000100000000000000100001000001000000000100100000010000001000000010000000000001100000000000100001000000100001000000010000001000000100100000001000000001000000000001000010000000000000000000010000100000000011000000000100001000001110001110000001000000000000010001000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000101000000000000000000000000010000000000000000100100000100000001000000010000000000000011000000000100001000000100001000000010000000100000100100000001000000001000000000001000010000000000000000000010000100000000001000000000100001000010001010001000001000000000000001010000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000010000000000000000000000000100000000000000000100100001000000001000000010000000000000000110000000100001000000100001000000010000000010000100100000001000000000100000000001000010000000000000000000010000100000000001000000000100001000010000100001000001000000000000000100000000000000000111111111111111000000"),
            std::bitset<NumberOfColumns>("000000000000110000000000000000000000001000000000000000000100100010000000001000000010000000000000000001000000100001000000100001000000010000000001000100100000001000000000100000000001000010000000000000000000010000100000000001000000000100001000010000100001000001000000000000001010000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000001001000000000000000000000010000000000000000000100100001000000001000000010000000000000000110000000100001000000100001000000010000000010000100100000001000000000010000000001000010000000000000000000010000100000000001000000000100001000010001010001000001000000000000010001000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000010001100000100000000000000100001000001000000000100100000100000001000000010000000000000011000000000100001000000100001000000010000000100000100100000001000000000010000000001000010000000000000000000010000100000000001000000000100001000001110001110000001000000000000100000100000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000100000110000010000000000001000000100000100000000100100000010000001000000010000000000001100000000000100001000000100001000000010000001000000100100000001000000010001000000001000010000000100000000000010000100000001011100000000100001000000000000000000001000000000001000000010000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000001000000101000001000000000010000000010000010000000100100000001000001000000010000000000110000000000000100001000000100001000000010000010000000100100000001000000100001000000001000010000001000000000000010000100000010000000000000100001000000100000000000001000000000010000000001000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000010000000010100000100000000100000000001000001000000100100000000100001000000010000000011000000000000000100001000000100001000000010000100000000100100000001000001000000100000001000010000010000000000000010000100000100000000000000100001000001000000000000001000000000100000000000100000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000100000000010011100010000001000000000000111000100000100100000000010001000000010000001100000000000000000100001000000100001000000010001000000000100100000001000010000000100000001000010000100000000000000010000100001000000000000000100001000010000000000000001000000001000000000000010000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("111111000000000001000000101111110000000000000000001000000100100000000001001000000010000110000000000000000000100001000000100001000000010010000000000100100000001000100011111111111110000010001000111111111111100000100010001111111111111000001000100011111111111110000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000000001000001000000000000000000000000010000000100100000000000101000000010011000000000000000000000100001000000100001000000010100000000000100100000000000010000000010000000000000000100000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000000000100010000000000000000000000000100000000011000000000000010000000001100000000000000000000000011110000000011110000000001000000000000011000000000000001000000001000000000000000010000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000000000100100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000001000000000000000001000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"),
            std::bitset<NumberOfColumns>("000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000100000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001")
        };
    } // namespace Icons

} // namespace Constants